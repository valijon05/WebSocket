services:
    app:
        build:
            context: .
            dockerfile: ./docker/php.dockerfile
        container_name: websocket_app
        restart: unless-stopped
        volumes:
            - .:/var/www
        networks:
            - app_network
        depends_on:
            - postgres
        ports:
            - "8080:8080"
#        command: >
#            sh -c "php artisan reverb:start && php artisan queue:listen"

    postgres:
        image: postgres
        container_name: websocket_postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app_network
        expose:
            - 5432

    pgadmin:
        image: dpage/pgadmin4
        container_name: websocket_pgadmin
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "8081:80"
        networks:
            - app_network

    nginx:
        container_name: websocket_nginx
        image: nginx:alpine  # Use the Nginx image
        ports:
            - "9000:80"  # Map port 8080 on the host to port 80 inside the container
        volumes:
            - ./:/var/www  # Mount the Laravel application directory-
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf  # Use our Nginx config
        depends_on:
            - app  # Ensure PHP-FPM is started before Nginx
        networks:
            - app_network  # Connect to the custom network

    node:
        image: node:22
        container_name: websocket_node
        working_dir: /var/www
        volumes:
            - ./:/var/www
        tty: true
        ports:
            - "5173:5173"  # For Vite development server
        environment:
            - NODE_ENV=development
        command: >
            sh -c "npm install && npm run dev"
        networks:
            - app_network

    redis:
        image: redis:latest
        container_name: websocket_redis
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        networks:
            - app_network

volumes:
    postgres_data:
    redis-data:

networks:
    app_network:
        driver: bridge




